{"version":3,"sources":["views/Cast/Cast.js","services/themoviedbApi.js"],"names":["Cast","state","cast","error","loading","componentDidMount","movieId","props","match","params","getCastsByMovieId","then","res","setState","this","map","actor","id","name","src","BASE_URL_POSTER","profile_path","alt","width","Component","API_KEY","axios","defaults","baseURL","popularFetch","page","get","data","searchMoviesByKeyword","keyword","gethMovieDetailsById","getUserReviewsAboutFilmById"],"mappings":"0MAIMA,E,4MACJC,MAAQ,CACNC,KAAM,KACNC,OAAO,EACPC,SAAS,G,EAEXC,kBAAoB,WAAO,IAEjBC,EADU,EAAKC,MAAfC,MACkBC,OAAlBH,QACRI,YAAkBJ,GAASK,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEX,KAAMU,EAAIV,W,uDAGzD,IACAA,EAASY,KAAKb,MAAdC,KACR,OACE,qCACE,wCACCA,GACC,6BACGA,EAAKa,KAAI,SAACC,EAAOC,GAChB,OACE,+BACE,6BAAKD,EAAME,OACX,qBAAKC,IAAG,UAAKC,KAAL,OAAuBJ,EAAMK,cAAgBC,IAAKN,EAAME,KAAMK,MAAO,QAFtEP,EAAMC,GAAKA,e,GArBjBO,aAyCJxB,a,gCC7Cf,iOAEMyB,EAAU,mCAGhBC,IAAMC,SAASC,QAFE,+BAIV,IAAMR,EAAkB,sCAExB,SAASS,IAAwB,IAAXC,EAAU,uDAAH,EAClC,OAAOJ,IACJK,IADI,oCAC6BN,EAD7B,iBAC6CK,IACjDnB,MAAK,SAAAC,GAAG,OAAIA,EAAIoB,QAGd,SAASC,EAAsBC,GAAoB,IAAXJ,EAAU,uDAAH,EACpD,OAAOJ,IACJK,IADI,gCAEsBN,EAFtB,iCAEsDS,EAFtD,iBAEsEJ,EAFtE,yBAIJnB,MAAK,SAAAC,GAAG,OAAIA,EAAIoB,QAGd,SAASG,EAAqBlB,GACnC,OAAOS,IACJK,IADI,6CAEmCd,EAFnC,oBAEiDQ,EAFjD,oBAIJd,MAAK,SAAAC,GAAG,OAAIA,EAAIoB,QAGd,SAAStB,EAAkBO,GAChC,OAAOS,IACJK,IADI,iBACUd,EADV,4BACgCQ,EADhC,oBAEJd,MAAK,SAAAC,GAAG,OAAIA,EAAIoB,QAGd,SAASI,EAA4BnB,GAAe,IAAXa,EAAU,uDAAH,EACrD,OAAOJ,IACJK,IADI,iBACUd,EADV,4BACgCQ,EADhC,gCAC+DK,IACnEnB,MAAK,SAAAC,GAAG,OAAIA,EAAIoB","file":"static/js/Cast.7717a521.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getCastsByMovieId, BASE_URL_POSTER } from '../../services/themoviedbApi';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: null,\r\n    error: false,\r\n    loading: false,\r\n  };\r\n  componentDidMount = () => {\r\n    const { match } = this.props;\r\n    const { movieId } = match.params;\r\n    getCastsByMovieId(movieId).then(res => this.setState({ cast: res.cast }));\r\n  };\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    return (\r\n      <>\r\n        <h2> Cast </h2>\r\n        {cast && (\r\n          <ul>\r\n            {cast.map((actor, id) => {\r\n              return (\r\n                <li key={actor.id + id}>\r\n                  <h4>{actor.name}</h4>\r\n                  <img src={`${BASE_URL_POSTER}${actor.profile_path}`} alt={actor.name} width={100} />\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// HOW TO DO THIS CORRECT??????????????\r\nCast.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '1172fc2ae56a45677284ff05c420b54f';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const BASE_URL_POSTER = 'https://image.tmdb.org/t/p/original';\r\n\r\nexport function popularFetch(page = 1) {\r\n  return axios\r\n    .get(`/trending/all/day?api_key=${API_KEY}&page=${page}`)\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function searchMoviesByKeyword(keyword, page = 1) {\r\n  return axios\r\n    .get(\r\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&page=${page}&include_adult=false`,\r\n    )\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function gethMovieDetailsById(id) {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`,\r\n    )\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function getCastsByMovieId(id) {\r\n  return axios\r\n    .get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function getUserReviewsAboutFilmById(id, page = 1) {\r\n  return axios\r\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`)\r\n    .then(res => res.data);\r\n}\r\n"],"sourceRoot":""}