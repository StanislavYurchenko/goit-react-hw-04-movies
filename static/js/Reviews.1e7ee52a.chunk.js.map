{"version":3,"sources":["views/Reviews/Reviews.js","services/themoviedbApi.js"],"names":["Reviews","state","reviews","page","error","loading","componentDidMount","movieId","props","match","params","getUserReviewsAboutFilmById","then","res","setState","results","this","length","map","author","content","id","Component","API_KEY","axios","defaults","baseURL","BASE_URL_POSTER","popularFetch","get","data","searchMoviesByKeyword","keyword","gethMovieDetailsById","getCastsByMovieId"],"mappings":"0MAIMA,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,KAAM,EACNC,OAAO,EACPC,SAAS,G,EAGXC,kBAAoB,WAAO,IAEjBC,EADU,EAAKC,MAAfC,MACkBC,OAAlBH,QACAJ,EAAS,EAAKF,MAAdE,KAERQ,YAA4BJ,EAASJ,GAAMS,MAAK,SAAAC,GAC9C,EAAKC,SAAS,CAAEZ,QAASW,EAAIE,c,uDAIvB,IACAb,EAAYc,KAAKf,MAAjBC,QAER,OACE,qCACE,0CAECA,EAAQe,OAAS,GAChB,6BACGf,EAAQgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,+BACE,6BAAKF,IACL,4BAAIC,MAFGC,e,GA7BHC,aAiDPtB,a,gCCrDf,iOAEMuB,EAAU,mCAGhBC,IAAMC,SAASC,QAFE,+BAIV,IAAMC,EAAkB,sCAExB,SAASC,IAAwB,IAAXzB,EAAU,uDAAH,EAClC,OAAOqB,IACJK,IADI,oCAC6BN,EAD7B,iBAC6CpB,IACjDS,MAAK,SAAAC,GAAG,OAAIA,EAAIiB,QAGd,SAASC,EAAsBC,GAAoB,IAAX7B,EAAU,uDAAH,EACpD,OAAOqB,IACJK,IADI,gCAEsBN,EAFtB,iCAEsDS,EAFtD,iBAEsE7B,EAFtE,yBAIJS,MAAK,SAAAC,GAAG,OAAIA,EAAIiB,QAGd,SAASG,EAAqBZ,GACnC,OAAOG,IACJK,IADI,6CAEmCR,EAFnC,oBAEiDE,EAFjD,oBAIJX,MAAK,SAAAC,GAAG,OAAIA,EAAIiB,QAGd,SAASI,EAAkBb,GAChC,OAAOG,IACJK,IADI,iBACUR,EADV,4BACgCE,EADhC,oBAEJX,MAAK,SAAAC,GAAG,OAAIA,EAAIiB,QAGd,SAASnB,EAA4BU,GAAe,IAAXlB,EAAU,uDAAH,EACrD,OAAOqB,IACJK,IADI,iBACUR,EADV,4BACgCE,EADhC,gCAC+DpB,IACnES,MAAK,SAAAC,GAAG,OAAIA,EAAIiB","file":"static/js/Reviews.1e7ee52a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getUserReviewsAboutFilmById } from '../../services/themoviedbApi';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n    page: 1,\r\n    error: false,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { match } = this.props;\r\n    const { movieId } = match.params;\r\n    const { page } = this.state;\r\n\r\n    getUserReviewsAboutFilmById(movieId, page).then(res => {\r\n      this.setState({ reviews: res.results });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h2> Reviews</h2>\r\n\r\n        {reviews.length > 0 && (\r\n          <ul>\r\n            {reviews.map(({ author, content, id }) => {\r\n              return (\r\n                <li key={id}>\r\n                  <h3>{author}</h3>\r\n                  <p>{content}</p>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// HOW TO DO THIS CORRECT??????????????\r\nReviews.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '1172fc2ae56a45677284ff05c420b54f';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const BASE_URL_POSTER = 'https://image.tmdb.org/t/p/original';\r\n\r\nexport function popularFetch(page = 1) {\r\n  return axios\r\n    .get(`/trending/all/day?api_key=${API_KEY}&page=${page}`)\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function searchMoviesByKeyword(keyword, page = 1) {\r\n  return axios\r\n    .get(\r\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&page=${page}&include_adult=false`,\r\n    )\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function gethMovieDetailsById(id) {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`,\r\n    )\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function getCastsByMovieId(id) {\r\n  return axios\r\n    .get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\r\n    .then(res => res.data);\r\n}\r\n\r\nexport function getUserReviewsAboutFilmById(id, page = 1) {\r\n  return axios\r\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`)\r\n    .then(res => res.data);\r\n}\r\n"],"sourceRoot":""}